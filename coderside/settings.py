"""
Django settings for coderside project.

Generated by 'django-admin startproject' using Django 1.11.1.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '=jo1xsm)8+sxrf4^9v#jouvg+a)c8-i0!*-$=f1m^8z54c#3@j'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    'localhost',
    'joasia',
    'joanna',
    '0.0.0.0',
    '127.0.0.1',
    '127.0.1.1',
    '127.0.2.1',
    'local.hipisi.org.pl'
]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # waliki staff
    'waliki',
    'waliki.git',  # optional but recommended
    'waliki.attachments',  # optional but recommended
    'waliki.pdf',  # optional
    # 'waliki.search',  # optional, additional configuration required
    'waliki.slides',  # optional
    'waliki.togetherjs',  # optional

    'sendfile',  # for waliki atachement
    'channels',  # web socket implementation

    # django additional modules
    # third part applications
    'django_extensions',
    'mptt',  # hierarchically data structure
    'social_django',

    # rest framework
    'rest_framework',  # for rest API
    # for code highlight
    'django_pygments',
    # my private tools
    'utils.apps.UtilsConfig',  # to share settings between Django and JavaScript

    'bands.apps.BandConfig',  # simple test page
    'snippets.apps.SnippetsConfig',  # code snippets apps

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # middleware for global request
    'utils.global_request.GlobalRequestMiddleware',
]

ROOT_URLCONF = 'coderside.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': (os.path.join(BASE_DIR, 'templates'),),
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'coderside.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = [
    os.path.join(BASE_DIR, "bands/static/"),
    # os.path.join(BASE_DIR, "react"),
    # '/var/www/static/',
]

# waliki config here
SENDFILE_BACKEND = 'sendfile.backends.simple'

# WALIKI_MARKUPS_SETTINGS = {'reStructuredText': {
#     # check http://docutils.sourceforge.net/docs/user/config.html
#     'settings_overrides': {
#         'initial_header_level': 2,
#         'record_dependencies': True,
#         'stylesheet_path': None,
#         'link_stylesheet': True,
#         'syntax_highlight': 'short',
#         'halt_level': 5,
#     },
#     'writer': HTML5Writer(),
#     'writer_name': 'html5',
#     },
# 'Markdown': {
#         'extensions': ['wikilinks', 'headerid'],
#         'extension_configs': {
#             'wikilinks': {'build_url': get_url},
#             'headerid': {'level': 2},
#         }
#     }


# For social auth
AUTHENTICATION_BACKENDS = (
    # 'social_core.backends.open_id.OpenIdAuth',
    # 'social_core.backends.google.GoogleOpenId',
    'social_core.backends.google.GoogleOAuth2',
    # 'social_core.backends.google.GoogleOAuth',
    # 'social_core.backends.twitter.TwitterOAuth',
    # 'social_core.backends.yahoo.YahooOpenId',
    'django.contrib.auth.backends.ModelBackend',
    'social_core.backends.facebook.FacebookOAuth2',
)

SOCIAL_AUTH_URL_NAMESPACE = 'social'
SOCIAL_AUTH_FACEBOOK_KEY = '1666508556932460'
SOCIAL_AUTH_FACEBOOK_SECRET = '82c4196112e63d94d31f15821f20fe80'
SOCIAL_AUTH_FACEBOOK_APP_NAMESPACE = '_aplikacja_bereta_a'
SOCIAL_AUTH_FACEBOOK_SCOPE = ['email']

# Always use bpython for shell_plus
SHELL_PLUS = "bpython"

# Web Socket Channels
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "asgiref.inmemory.ChannelLayer",
        "ROUTING": "snippets.routing.channel_routing",
    },
}

# import settings shared between Django and JavaScript
try:
    from .common_settings import *
except ImportError as e:
    pass

# import local specific settings
try:
    from ._local_settings import *
except ImportError as e:
    pass
